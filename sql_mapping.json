{
  "name": "SQL_Mappings",
  "properties": {
    "type": "MappingDataFlow",
    "typeProperties": {
      "sources": [
        {
          "linkedService": {
            "referenceName": "LS_AzureSynapseAnalytics",
            "type": "LinkedServiceReference"
          },
          "name": "AllObjects"
        }
      ],
      "sinks": [
        {
          "dataset": {
            "referenceName": "DS_AzureSynapseAnalyticsTable",
            "type": "DatasetReference"
          },
          "name": "SinkToSQL"
        }
      ],
      "transformations": [
        {
          "name": "CapitalizeTexts",
          "description": "Autogenerated by data preview actions"
        },
        {
          "name": "RemoveColumns"
        },
        {
          "name": "JoinAll"
        },
        {
          "name": "MatchRegex"
        },
        {
          "name": "FilterMatchingSources"
        },
        {
          "name": "RemoveExtraColumns"
        }
      ],
      "scriptLines": [
        "source(output(",
        "          OBJ_ID as integer,",
        "          OBJ_NAME as string,",
        "          OBJ_SCHEMA as string,",
        "          OBJ_TYPE as string,",
        "          OBJ_DEFINITION as string",
        "     ),",
        "     allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     format: 'query',",
        "     store: 'synapseanalytics',",
        "     query: 'SELECT\\n    O.OBJECT_ID AS OBJ_ID,\\n    O.NAME AS OBJ_NAME,\\n    S.NAME AS OBJ_SCHEMA,\\n     CASE\\n        WHEN O.TYPE = \\'V\\' THEN \\'VIEW\\'\\n        WHEN O.TYPE = \\'U\\' THEN \\'TABLE\\'\\n        WHEN O.TYPE = \\'P\\' THEN \\'PROCEDURE\\'\\n    END AS OBJ_TYPE,\\n    M.DEFINITION OBJ_DEFINITION\\nFROM SYS.OBJECTS O\\nLEFT JOIN SYS.SQL_MODULES M ON O.OBJECT_ID = M.OBJECT_ID\\nLEFT JOIN SYS.SCHEMAS S ON O.SCHEMA_ID = S.SCHEMA_ID\\nWHERE\\n    S.NAME IN (\\'DBO\\', \\'EXT\\', \\'IFSAPP\\', \\'IFSINFO\\')\\n    AND O.TYPE IN (\\'V\\', \\'U\\', \\'P\\')',",
        "     isolationLevel: 'READ_UNCOMMITTED',",
        "     staged: true) ~> AllObjects",
        "AllObjects derive(each(match(name=='OBJ_SCHEMA'), $$ = upper($$)),",
        "          each(match(name=='OBJ_DEFINITION'), $$ = upper($$)),",
        "          each(match(name=='OBJ_NAME'), $$ = upper($$)),",
        "          Join_Cond = 1) ~> CapitalizeTexts",
        "CapitalizeTexts select(mapColumn(",
        "          SRC_ID = OBJ_ID,",
        "          SRC_NAME = OBJ_NAME,",
        "          SRC_SCHEMA = OBJ_SCHEMA,",
        "          SRC_TYPE = OBJ_TYPE,",
        "          SRC_Join_Cond = Join_Cond",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> RemoveColumns",
        "CapitalizeTexts, RemoveColumns join(Join_Cond == SRC_Join_Cond,",
        "     joinType:'inner',",
        "     matchType:'exact',",
        "     ignoreSpaces: false,",
        "     broadcast: 'auto')~> JoinAll",
        "JoinAll derive(MatchTableName = and(\r",
        "    or(regexMatch(OBJ_DEFINITION, 'FROM\\\\s*\\\\[?' + SRC_NAME + '\\\\]?[^a-zA-Z0-9_]')\r",
        "    , regexMatch(OBJ_DEFINITION, ' JOIN\\\\s*\\\\[?' + SRC_NAME + '\\\\]?[^a-zA-Z0-9_]'))\r",
        "    , equalsIgnoreCase(SRC_SCHEMA, 'DBO')\r",
        "    ),",
        "          MatchesSchemaAndTable = or (regexMatch(OBJ_DEFINITION, 'FROM\\\\s*\\\\[?' + SRC_SCHEMA + '\\\\]?\\\\.\\\\[?' + SRC_NAME + '\\\\]?[^a-zA-Z0-9_]')\r",
        ", regexMatch(OBJ_DEFINITION, ' JOIN\\\\s*\\\\[?' + SRC_SCHEMA + '\\\\]?\\\\.\\\\[?' + SRC_NAME + '\\\\]?[^a-zA-Z0-9_]')),",
        "          MatchTableAndStoredProc = regexMatch(SRC_NAME, 'USP_INSERT_' + OBJ_NAME + '$')) ~> MatchRegex",
        "MatchRegex filter(or(MatchTableName, or(MatchesSchemaAndTable, MatchTableAndStoredProc))) ~> FilterMatchingSources",
        "FilterMatchingSources select(mapColumn(",
        "          OBJ_ID,",
        "          OBJ_NAME,",
        "          OBJ_SCHEMA,",
        "          OBJ_TYPE,",
        "          SRC_ID,",
        "          SRC_NAME,",
        "          SRC_SCHEMA,",
        "          MatchTableName,",
        "          MatchesSchemaAndTable,",
        "          MatchTableAndStoredProc",
        "     ),",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true) ~> RemoveExtraColumns",
        "RemoveExtraColumns sink(allowSchemaDrift: true,",
        "     validateSchema: false,",
        "     deletable:false,",
        "     insertable:true,",
        "     updateable:false,",
        "     upsertable:false,",
        "     recreate:true,",
        "     format: 'table',",
        "     staged: true,",
        "     allowCopyCommand: true,",
        "     skipDuplicateMapInputs: true,",
        "     skipDuplicateMapOutputs: true,",
        "     errorHandlingOption: 'stopOnFirstError') ~> SinkToSQL"
      ]
    }
  }
}